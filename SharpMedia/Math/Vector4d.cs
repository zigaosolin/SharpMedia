// This file was generated by TemplateEngine from template source 'Vector4'
// using template 'Vector4d. Do not modify this file directly, modify it from template source.

// This file constitutes a part of the SharpMedia project, (c) 2007 by the SharpMedia team
// and is licensed for your use under the conditions of the NDA or other legally binding contract
// that you or a legal entity you represent has signed with the SharpMedia team.
// In an event that you have received or obtained this file without such legally binding contract
// in place, you MUST destroy all files and other content to which this lincese applies and
// contact the SharpMedia team for further instructions at the internet mail address:
//
//    legal@sharpmedia.com
//
using System;
using SharpMedia.Testing;

namespace SharpMedia.Math
{
    /// <summary>
    /// A four dimensional vector of genetic type.
    /// </summary>
    [Serializable]
    public struct Vector4d : IComparable, IComparable<Vector4d>, IEquatable<Vector4d>
    {

        #region Public Members

        /// <summary>
        /// A vector processor delegate. Used at many places, like solver etc. Processor
        /// is a kind of Vector4d transformator.
        /// </summary>
        /// <param name="input">Input, as vector.</param>
        /// <returns>Vector output.</returns>
        public delegate Vector4d Processor(Vector4d input);

        /// <summary>
        /// The X component of the vector.
        /// </summary>
        public double X;

        /// <summary>
        /// The Y component of the vector.
        /// </summary>
        public double Y;

        /// <summary>
        /// The Z component of the vector.
        /// </summary>
        public double Z;

        /// <summary>
        /// The W component of the vector.
        /// </summary>
        public double W;

        #endregion

        #region Static Members

        //#ifdef NaN


        /// <summary>
        /// The NaN vector.
        /// </summary>
        public static Vector4d NaN
        {
            get { return new Vector4d(double.NaN, double.NaN, double.NaN, double.NaN); }
        }

        //#ifdef IsNaN


        /// <summary>
        /// Is the vector NaN. Vector is NaN, if any component is NaN.
        /// </summary>
        /// <param name="v"></param>
        /// <returns></returns>
        public static bool IsNaN(Vector4d v)
        {
            return double.IsNaN(v.X) || double.IsNaN(v.Y) || double.IsNaN(v.Z) || double.IsNaN(v.W);
        }

        //#endif

        //#endif


        /// <summary>
        /// Index access to vector.
        /// </summary>
        /// <param name="index">The index.</param>
        public double this[uint index]
        {
            get
            {
                if (index == 0) return X;
                if (index == 1) return Y;
                if (index == 2) return Z;
                if (index == 3) return W;
                throw new ArgumentException("Invalid index for 4D vector.");
            }
            set
            {
                if (index == 0) X = value;
                else if (index == 1) Y = value;
                else if (index == 2) Z = value;
                else if (index == 3) W = value;
                else throw new ArgumentException("Invalid index for 4D vector.");
            }
        }

        /// <summary>
        /// A zero vector.
        /// </summary>
        public static Vector4d Zero
        {
            get { return new Vector4d(0.0, 0.0, 0.0, 0.0); }
        }

        /// <summary>
        /// Unit vector in axis X.
        /// </summary>
        public static Vector4d AxisX
        {
            get { return new Vector4d(1.0, 0.0, 0.0, 0.0); }
        }

        /// <summary>
        /// Unit vector in axis y.
        /// </summary>
        public static Vector4d AxisY
        {
            get { return new Vector4d(0.0, 1.0, 0.0, 0.0); }
        }

        /// <summary>
        /// Unit vector in axis z.
        /// </summary>
        public static Vector4d AxisZ
        {
            get { return new Vector4d(0.0, 0.0, 1.0, 0.0); }
        }

        /// <summary>
        /// Unit vector in axis w.
        /// </summary>
        public static Vector4d AxisW
        {
            get { return new Vector4d(0.0, 0.0, 0.0, 1.0); }
        }

        //#ifdef UniformRandomSupply


        /// <summary>
        /// Unit random vector property.
        /// </summary>
        public static Vector4d UnitRandom
        {
            get
            {
                Vector4d vec = new Vector4d(MathHelper.UniformRandom(), MathHelper.UniformRandom(),
                                            MathHelper.UniformRandom(), MathHelper.UniformRandom());
                return vec.Normal;
            }
        }

        //#endif
        
        //#ifdef NearEqual


        /// <summary>
        /// Checks if vectors are nearly equal.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <param name="eps">The maximum difference in one component.</param>
        /// <returns>Are vectors equal indicator.</returns>
        public static bool NearEqual(Vector4d v1, Vector4d v2, double eps)
        {
            if (!MathHelper.NearEqual(v1.X, v2.X, eps)) return false;
            if (!MathHelper.NearEqual(v1.Y, v2.Y, eps)) return false;
            if (!MathHelper.NearEqual(v1.Z, v2.Z, eps)) return false;
            if (!MathHelper.NearEqual(v1.W, v2.W, eps)) return false;
            return true;
        }

        /// <summary>
        /// Near equal using default epsilon.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Result indicator.</returns>
        public static bool NearEqual(Vector4d v1, Vector4d v2)
        {
            if (!MathHelper.NearEqual(v1.X, v2.X)) return false;
            if (!MathHelper.NearEqual(v1.Y, v2.Y)) return false;
            if (!MathHelper.NearEqual(v1.Z, v2.Z)) return false;
            if (!MathHelper.NearEqual(v1.W, v2.W)) return false;
            return true;
        }

        //#endif

        /// <summary>
        /// Multiplication by components.
        /// </summary>
        public static Vector4d ComponentMultiply(Vector4d v1, Vector4d v2)
        {
            return new Vector4d(v1.X * v2.X, v1.Y * v2.Y, v1.Z * v2.Z, v1.W * v2.W);
        }

        /// <summary>
        /// Division by components.
        /// </summary>
        public static Vector4d ComponentDivision(Vector4d v1, Vector4d v2)
        {
            return new Vector4d(v1.X / v2.X, v1.Y / v2.Y, v1.Z / v2.Z, v1.W / v2.W);
        }

        #endregion

        #region Overrides

        /// <summary>
        /// Outputs vector in (X,Y) form.
        /// </summary>
        /// <returns>Vector converted to string.</returns>
        public override string ToString()
        {
            return "(" + X.ToString() + " ," + Y.ToString() + " ," + Z.ToString() + " ," + W.ToString() + ")";
        }

        /// <summary>
        /// Checks if objects equal.
        /// </summary>
        /// <param name="obj">The other object.</param>
        /// <returns>Do objects equal.</returns>
        public override bool Equals(object obj)
        {
            if (obj.GetType() == this.GetType()) return this == (Vector4d)obj;
            return false;
        }

        /// <summary>
        /// Obtain the hash code.
        /// </summary>
        /// <returns>The hash code.</returns>
        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        #endregion

        #region Operators

        /// <summary>
        /// Overloadable addition.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Result of addition.</returns>
        public static Vector4d operator +(Vector4d v1, Vector4d v2)
        {
            return new Vector4d(v1.X + v2.X, v1.Y + v2.Y, v1.Z + v2.Z, v1.W + v2.W);
        }

        /// <summary>
        /// Overloadable substraction.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Result of substraction.</returns>
        public static Vector4d operator -(Vector4d v1, Vector4d v2)
        {
            return new Vector4d(v1.X - v2.X, v1.Y - v2.Y, v1.Z - v2.Z, v1.W - v2.W);
        }

        /// <summary>
        /// Overloadable multiplication, or so called dot product. Result is a scalar.
        /// Dot product can be interpretered as:
        /// <code>this * other == this.Length * other.Length * this.AngleTo(other)</code>
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Result of substraction.</returns>
        public static double operator *(Vector4d v1, Vector4d v2)
        {
            return v1.X * v2.X + v1.Y * v2.Y + v1.Z * v2.Z + v1.W * v2.W;
        }

        /// <summary>
        /// Vector multiplication with scalar.
        /// </summary>
        /// <param name="v1">The vector.</param>
        /// <param name="f">Scalar.</param>
        /// <returns>Result of operation.</returns>
        public static Vector4d operator *(Vector4d v1, double f)
        {
            return new Vector4d(v1.X * f, v1.Y * f, v1.Z * f, v1.W * f);
        }

        /// <summary>
        /// Vector multiplication with scalar.
        /// </summary>
        /// <param name="v1">The vector.</param>
        /// <param name="f">Scalar.</param>
        /// <returns>Result of operation.</returns>
        public static Vector4d operator *(double f, Vector4d v1)
        {
            return new Vector4d(v1.X * f, v1.Y * f, v1.Z * f, v1.W * f);
        }

        /// <summary>
        /// Vector divided by scalar.
        /// </summary>
        /// <param name="v1">The vector.</param>
        /// <param name="f">Scalar.</param>
        /// <returns>Result of operation.</returns>
        public static Vector4d operator /(Vector4d v1, double f)
        {
            return new Vector4d(v1.X / f, v1.Y / f, v1.Z / f, v1.W / f);
        }

        /// <summary>
        /// Negation operator.
        /// </summary>
        /// <param name="v">The vector.</param>
        /// <returns>Negated vector (direction flipped).</returns>
        public static Vector4d operator -(Vector4d v)
        {
            return v * -1.0;
        }



        /// <summary>
        /// Checks if vectors are equal. This check is precise and may not give desirable
        /// result if small errors occur due to precission errors.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Are vectorrs equal.</returns>
        public static bool operator ==(Vector4d v1, Vector4d v2)
        {
            return (v1.X == v2.X) && (v1.Y == v2.Y) && (v1.Z == v2.Z) && (v1.W == v2.W);
        }

        /// <summary>
        /// Returns if vectors are different.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Are vectors different.</returns>
        public static bool operator !=(Vector4d v1, Vector4d v2)
        {
            return !(v1 == v2);
        }

        #endregion

        #region Properties

        /// <summary>
        /// The obsolete x-property getter.
        /// </summary>
        [Obsolete]
        public double x
        {
            get { return X; }
            set { X = value; }
        }

        /// <summary>
        /// The obsolete y-property getter.
        /// </summary>
        [Obsolete]
        public double y
        {
            get { return Y; }
            set { Y = value; }
        }

        /// <summary>
        /// The obsolete z-property getter.
        /// </summary>
        [Obsolete]
        public double z
        {
            get { return Z; }
            set { Z = value; }
        }

        /// <summary>
        /// The obsolete w-property getter.
        /// </summary>
        [Obsolete]
        public double w
        {
            get { return W; }
            set { W = value; }
        }



        //#ifdef Vector2ClassName


        /// <summary>
        /// A two dimensional vector.
        /// </summary>
        public Vector2d Vec2
        {
            set { X = value.X; Y = value.Y; Z = 0.0; W = 0.0; }
            get { return new Vector2d(X, Y); }
        }

        //#endif

        //#ifdef Vector3ClassName


        /// <summary>
        /// A three dimensional vector.
        /// </summary>
        public Vector3d Vec3
        {
            set { X = value.X; Y = value.Y; Z = value.Z; W = 0.0; }
            get { return new Vector3d(X, Y, Z); }
        }

        /// <summary>
        /// Gets or sets the homohenous point 3D.
        /// </summary>
        /// <value>The point3DD.</value>
        public Vector3d Point3D
        {
            get
            {
                if (W == 0.0)
                {
                    // Point in infinity.
                    throw new ArithmeticException("Cannot convert a homogenous 4D point to 3D point, it is point in infinity.");
                }
                double w_inv = 1.0 / W;
                return new Vector3d(X * w_inv, Y * w_inv, Z * w_inv);
            }
            set
            {
                X = value.X;
                Y = value.Y;
                Z = value.Z;
                W = 1.0;
            }
        }

        //#endif

        /// <summary>
        /// Are all components positive.
        /// </summary>
        public bool AllPositive
        {
            get
            {
                if (X >= 0.0 && Y >= 0.0 && Z >= 0.0 && W >= 0.0) return true;
                return false;
            }
        }

        /// <summary>
        /// Are all components positive, strictly speaking.
        /// </summary>
        public bool AllPositiveStrict
        {
            get
            {
                if (X > 0.0 && Y > 0.0 && Z > 0.0 && W > 0.0) return true;
                return false;
            }
        }

        /// <summary>
        /// Are all components negative.
        /// </summary>
        public bool AllNegative
        {
            get
            {
                if (X <= 0.0 && Y <= 0.0 && Z <= 0.0 && W <= 0.0) return true;
                return false;
            }
        }

        /// <summary>
        /// Are all components negative.
        /// </summary>
        public bool AllNegativeStrict
        {
            get
            {
                if (X < 0.0 && Y < 0.0 && Z < 0.0 && W < 0.0) return true;
                return false;
            }
        }

        //#ifdef Sqrt


        /// <summary>
        /// The length of vector.
        /// </summary>
        public double Length
        {
            get { return MathHelper.Sqrt(this * this); }
            set { this = this * value / MathHelper.Sqrt((this * this)); }
        }

        /// <summary>
        /// Normal vector, always length of 1.
        /// </summary>
        public Vector4d Normal
        {
            get { return this / Length; }
        }

        /// <summary>
        /// Normalized direction.
        /// </summary>
        public Vector4d Direction
        {
            get { return this / Length; }
            set { this = value * Length; }
        }

        //#endif

        /// <summary>
        /// Length squared.
        /// </summary>
        public double Length2
        {
            get { return this * this; }
            set { this = this * value / (this * this); }
        }

        #endregion

        #region Swizzles

        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXXX
        {
            get { return new Vector4d(X, X, X, X); }
            set { X = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXXY
        {
            get { return new Vector4d(X, X, X, Y); }
            set { X = value.Z; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXXZ
        {
            get { return new Vector4d(X, X, X, Z); }
            set { X = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXXW
        {
            get { return new Vector4d(X, X, X, W); }
            set { X = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXYX
        {
            get { return new Vector4d(X, X, Y, X); }
            set { X = value.W; Y = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXYY
        {
            get { return new Vector4d(X, X, Y, Y); }
            set { X = value.Y; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXYZ
        {
            get { return new Vector4d(X, X, Y, Z); }
            set { X = value.Y; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXYW
        {
            get { return new Vector4d(X, X, Y, W); }
            set { X = value.Y; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXZX
        {
            get { return new Vector4d(X, X, Z, X); }
            set { X = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXZY
        {
            get { return new Vector4d(X, X, Z, Y); }
            set { X = value.Y; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXZZ
        {
            get { return new Vector4d(X, X, Z, Z); }
            set { X = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXZW
        {
            get { return new Vector4d(X, X, Z, W); }
            set { X = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXWX
        {
            get { return new Vector4d(X, X, W, X); }
            set { X = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXWY
        {
            get { return new Vector4d(X, X, W, Y); }
            set { X = value.Y; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXWZ
        {
            get { return new Vector4d(X, X, W, Z); }
            set { X = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XXWW
        {
            get { return new Vector4d(X, X, W, W); }
            set { X = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYXX
        {
            get { return new Vector4d(X, Y, X, X); }
            set { X = value.W; Y = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYXY
        {
            get { return new Vector4d(X, Y, X, Y); }
            set { X = value.Z; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYXZ
        {
            get { return new Vector4d(X, Y, X, Z); }
            set { X = value.Z; Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYXW
        {
            get { return new Vector4d(X, Y, X, W); }
            set { X = value.Z; Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYYX
        {
            get { return new Vector4d(X, Y, Y, X); }
            set { X = value.W; Y = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYYY
        {
            get { return new Vector4d(X, Y, Y, Y); }
            set { X = value.X; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYYZ
        {
            get { return new Vector4d(X, Y, Y, Z); }
            set { X = value.X; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYYW
        {
            get { return new Vector4d(X, Y, Y, W); }
            set { X = value.X; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYZX
        {
            get { return new Vector4d(X, Y, Z, X); }
            set { X = value.W; Y = value.Y; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYZY
        {
            get { return new Vector4d(X, Y, Z, Y); }
            set { X = value.X; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYZZ
        {
            get { return new Vector4d(X, Y, Z, Z); }
            set { X = value.X; Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYZW
        {
            get { return new Vector4d(X, Y, Z, W); }
            set { X = value.X; Y = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYWX
        {
            get { return new Vector4d(X, Y, W, X); }
            set { X = value.W; Y = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYWY
        {
            get { return new Vector4d(X, Y, W, Y); }
            set { X = value.X; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYWZ
        {
            get { return new Vector4d(X, Y, W, Z); }
            set { X = value.X; Y = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XYWW
        {
            get { return new Vector4d(X, Y, W, W); }
            set { X = value.X; Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZXX
        {
            get { return new Vector4d(X, Z, X, X); }
            set { X = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZXY
        {
            get { return new Vector4d(X, Z, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZXZ
        {
            get { return new Vector4d(X, Z, X, Z); }
            set { X = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZXW
        {
            get { return new Vector4d(X, Z, X, W); }
            set { X = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZYX
        {
            get { return new Vector4d(X, Z, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZYY
        {
            get { return new Vector4d(X, Z, Y, Y); }
            set { X = value.X; Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZYZ
        {
            get { return new Vector4d(X, Z, Y, Z); }
            set { X = value.X; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZYW
        {
            get { return new Vector4d(X, Z, Y, W); }
            set { X = value.X; Y = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZZX
        {
            get { return new Vector4d(X, Z, Z, X); }
            set { X = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZZY
        {
            get { return new Vector4d(X, Z, Z, Y); }
            set { X = value.X; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZZZ
        {
            get { return new Vector4d(X, Z, Z, Z); }
            set { X = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZZW
        {
            get { return new Vector4d(X, Z, Z, W); }
            set { X = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZWX
        {
            get { return new Vector4d(X, Z, W, X); }
            set { X = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZWY
        {
            get { return new Vector4d(X, Z, W, Y); }
            set { X = value.X; Y = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZWZ
        {
            get { return new Vector4d(X, Z, W, Z); }
            set { X = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XZWW
        {
            get { return new Vector4d(X, Z, W, W); }
            set { X = value.X; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWXX
        {
            get { return new Vector4d(X, W, X, X); }
            set { X = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWXY
        {
            get { return new Vector4d(X, W, X, Y); }
            set { X = value.Z; Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWXZ
        {
            get { return new Vector4d(X, W, X, Z); }
            set { X = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWXW
        {
            get { return new Vector4d(X, W, X, W); }
            set { X = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWYX
        {
            get { return new Vector4d(X, W, Y, X); }
            set { X = value.W; Y = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWYY
        {
            get { return new Vector4d(X, W, Y, Y); }
            set { X = value.X; Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWYZ
        {
            get { return new Vector4d(X, W, Y, Z); }
            set { X = value.X; Y = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWYW
        {
            get { return new Vector4d(X, W, Y, W); }
            set { X = value.X; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWZX
        {
            get { return new Vector4d(X, W, Z, X); }
            set { X = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWZY
        {
            get { return new Vector4d(X, W, Z, Y); }
            set { X = value.X; Y = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWZZ
        {
            get { return new Vector4d(X, W, Z, Z); }
            set { X = value.X; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWZW
        {
            get { return new Vector4d(X, W, Z, W); }
            set { X = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWWX
        {
            get { return new Vector4d(X, W, W, X); }
            set { X = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWWY
        {
            get { return new Vector4d(X, W, W, Y); }
            set { X = value.X; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWWZ
        {
            get { return new Vector4d(X, W, W, Z); }
            set { X = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d XWWW
        {
            get { return new Vector4d(X, W, W, W); }
            set { X = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXXX
        {
            get { return new Vector4d(Y, X, X, X); }
            set { X = value.W; Y = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXXY
        {
            get { return new Vector4d(Y, X, X, Y); }
            set { X = value.Z; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXXZ
        {
            get { return new Vector4d(Y, X, X, Z); }
            set { X = value.Z; Y = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXXW
        {
            get { return new Vector4d(Y, X, X, W); }
            set { X = value.Z; Y = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXYX
        {
            get { return new Vector4d(Y, X, Y, X); }
            set { X = value.W; Y = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXYY
        {
            get { return new Vector4d(Y, X, Y, Y); }
            set { X = value.Y; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXYZ
        {
            get { return new Vector4d(Y, X, Y, Z); }
            set { X = value.Y; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXYW
        {
            get { return new Vector4d(Y, X, Y, W); }
            set { X = value.Y; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXZX
        {
            get { return new Vector4d(Y, X, Z, X); }
            set { X = value.W; Y = value.X; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXZY
        {
            get { return new Vector4d(Y, X, Z, Y); }
            set { X = value.Y; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXZZ
        {
            get { return new Vector4d(Y, X, Z, Z); }
            set { X = value.Y; Y = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXZW
        {
            get { return new Vector4d(Y, X, Z, W); }
            set { X = value.Y; Y = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXWX
        {
            get { return new Vector4d(Y, X, W, X); }
            set { X = value.W; Y = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXWY
        {
            get { return new Vector4d(Y, X, W, Y); }
            set { X = value.Y; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXWZ
        {
            get { return new Vector4d(Y, X, W, Z); }
            set { X = value.Y; Y = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YXWW
        {
            get { return new Vector4d(Y, X, W, W); }
            set { X = value.Y; Y = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYXX
        {
            get { return new Vector4d(Y, Y, X, X); }
            set { X = value.W; Y = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYXY
        {
            get { return new Vector4d(Y, Y, X, Y); }
            set { X = value.Z; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYXZ
        {
            get { return new Vector4d(Y, Y, X, Z); }
            set { X = value.Z; Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYXW
        {
            get { return new Vector4d(Y, Y, X, W); }
            set { X = value.Z; Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYYX
        {
            get { return new Vector4d(Y, Y, Y, X); }
            set { X = value.W; Y = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYYY
        {
            get { return new Vector4d(Y, Y, Y, Y); }
            set { Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYYZ
        {
            get { return new Vector4d(Y, Y, Y, Z); }
            set { Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYYW
        {
            get { return new Vector4d(Y, Y, Y, W); }
            set { Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYZX
        {
            get { return new Vector4d(Y, Y, Z, X); }
            set { X = value.W; Y = value.Y; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYZY
        {
            get { return new Vector4d(Y, Y, Z, Y); }
            set { Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYZZ
        {
            get { return new Vector4d(Y, Y, Z, Z); }
            set { Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYZW
        {
            get { return new Vector4d(Y, Y, Z, W); }
            set { Y = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYWX
        {
            get { return new Vector4d(Y, Y, W, X); }
            set { X = value.W; Y = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYWY
        {
            get { return new Vector4d(Y, Y, W, Y); }
            set { Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYWZ
        {
            get { return new Vector4d(Y, Y, W, Z); }
            set { Y = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YYWW
        {
            get { return new Vector4d(Y, Y, W, W); }
            set { Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZXX
        {
            get { return new Vector4d(Y, Z, X, X); }
            set { X = value.W; Y = value.X; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZXY
        {
            get { return new Vector4d(Y, Z, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZXZ
        {
            get { return new Vector4d(Y, Z, X, Z); }
            set { X = value.Z; Y = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZXW
        {
            get { return new Vector4d(Y, Z, X, W); }
            set { X = value.Z; Y = value.X; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZYX
        {
            get { return new Vector4d(Y, Z, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZYY
        {
            get { return new Vector4d(Y, Z, Y, Y); }
            set { Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZYZ
        {
            get { return new Vector4d(Y, Z, Y, Z); }
            set { Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZYW
        {
            get { return new Vector4d(Y, Z, Y, W); }
            set { Y = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZZX
        {
            get { return new Vector4d(Y, Z, Z, X); }
            set { X = value.W; Y = value.X; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZZY
        {
            get { return new Vector4d(Y, Z, Z, Y); }
            set { Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZZZ
        {
            get { return new Vector4d(Y, Z, Z, Z); }
            set { Y = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZZW
        {
            get { return new Vector4d(Y, Z, Z, W); }
            set { Y = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZWX
        {
            get { return new Vector4d(Y, Z, W, X); }
            set { X = value.W; Y = value.X; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZWY
        {
            get { return new Vector4d(Y, Z, W, Y); }
            set { Y = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZWZ
        {
            get { return new Vector4d(Y, Z, W, Z); }
            set { Y = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YZWW
        {
            get { return new Vector4d(Y, Z, W, W); }
            set { Y = value.X; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWXX
        {
            get { return new Vector4d(Y, W, X, X); }
            set { X = value.W; Y = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWXY
        {
            get { return new Vector4d(Y, W, X, Y); }
            set { X = value.Z; Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWXZ
        {
            get { return new Vector4d(Y, W, X, Z); }
            set { X = value.Z; Y = value.X; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWXW
        {
            get { return new Vector4d(Y, W, X, W); }
            set { X = value.Z; Y = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWYX
        {
            get { return new Vector4d(Y, W, Y, X); }
            set { X = value.W; Y = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWYY
        {
            get { return new Vector4d(Y, W, Y, Y); }
            set { Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWYZ
        {
            get { return new Vector4d(Y, W, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWYW
        {
            get { return new Vector4d(Y, W, Y, W); }
            set { Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWZX
        {
            get { return new Vector4d(Y, W, Z, X); }
            set { X = value.W; Y = value.X; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWZY
        {
            get { return new Vector4d(Y, W, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWZZ
        {
            get { return new Vector4d(Y, W, Z, Z); }
            set { Y = value.X; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWZW
        {
            get { return new Vector4d(Y, W, Z, W); }
            set { Y = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWWX
        {
            get { return new Vector4d(Y, W, W, X); }
            set { X = value.W; Y = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWWY
        {
            get { return new Vector4d(Y, W, W, Y); }
            set { Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWWZ
        {
            get { return new Vector4d(Y, W, W, Z); }
            set { Y = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d YWWW
        {
            get { return new Vector4d(Y, W, W, W); }
            set { Y = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXXX
        {
            get { return new Vector4d(Z, X, X, X); }
            set { X = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXXY
        {
            get { return new Vector4d(Z, X, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXXZ
        {
            get { return new Vector4d(Z, X, X, Z); }
            set { X = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXXW
        {
            get { return new Vector4d(Z, X, X, W); }
            set { X = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXYX
        {
            get { return new Vector4d(Z, X, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXYY
        {
            get { return new Vector4d(Z, X, Y, Y); }
            set { X = value.Y; Y = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXYZ
        {
            get { return new Vector4d(Z, X, Y, Z); }
            set { X = value.Y; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXYW
        {
            get { return new Vector4d(Z, X, Y, W); }
            set { X = value.Y; Y = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXZX
        {
            get { return new Vector4d(Z, X, Z, X); }
            set { X = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXZY
        {
            get { return new Vector4d(Z, X, Z, Y); }
            set { X = value.Y; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXZZ
        {
            get { return new Vector4d(Z, X, Z, Z); }
            set { X = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXZW
        {
            get { return new Vector4d(Z, X, Z, W); }
            set { X = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXWX
        {
            get { return new Vector4d(Z, X, W, X); }
            set { X = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXWY
        {
            get { return new Vector4d(Z, X, W, Y); }
            set { X = value.Y; Y = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXWZ
        {
            get { return new Vector4d(Z, X, W, Z); }
            set { X = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZXWW
        {
            get { return new Vector4d(Z, X, W, W); }
            set { X = value.Y; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYXX
        {
            get { return new Vector4d(Z, Y, X, X); }
            set { X = value.W; Y = value.Y; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYXY
        {
            get { return new Vector4d(Z, Y, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYXZ
        {
            get { return new Vector4d(Z, Y, X, Z); }
            set { X = value.Z; Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYXW
        {
            get { return new Vector4d(Z, Y, X, W); }
            set { X = value.Z; Y = value.Y; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYYX
        {
            get { return new Vector4d(Z, Y, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYYY
        {
            get { return new Vector4d(Z, Y, Y, Y); }
            set { Y = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYYZ
        {
            get { return new Vector4d(Z, Y, Y, Z); }
            set { Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYYW
        {
            get { return new Vector4d(Z, Y, Y, W); }
            set { Y = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYZX
        {
            get { return new Vector4d(Z, Y, Z, X); }
            set { X = value.W; Y = value.Y; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYZY
        {
            get { return new Vector4d(Z, Y, Z, Y); }
            set { Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYZZ
        {
            get { return new Vector4d(Z, Y, Z, Z); }
            set { Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYZW
        {
            get { return new Vector4d(Z, Y, Z, W); }
            set { Y = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYWX
        {
            get { return new Vector4d(Z, Y, W, X); }
            set { X = value.W; Y = value.Y; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYWY
        {
            get { return new Vector4d(Z, Y, W, Y); }
            set { Y = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYWZ
        {
            get { return new Vector4d(Z, Y, W, Z); }
            set { Y = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZYWW
        {
            get { return new Vector4d(Z, Y, W, W); }
            set { Y = value.Y; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZXX
        {
            get { return new Vector4d(Z, Z, X, X); }
            set { X = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZXY
        {
            get { return new Vector4d(Z, Z, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZXZ
        {
            get { return new Vector4d(Z, Z, X, Z); }
            set { X = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZXW
        {
            get { return new Vector4d(Z, Z, X, W); }
            set { X = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZYX
        {
            get { return new Vector4d(Z, Z, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZYY
        {
            get { return new Vector4d(Z, Z, Y, Y); }
            set { Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZYZ
        {
            get { return new Vector4d(Z, Z, Y, Z); }
            set { Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZYW
        {
            get { return new Vector4d(Z, Z, Y, W); }
            set { Y = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZZX
        {
            get { return new Vector4d(Z, Z, Z, X); }
            set { X = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZZY
        {
            get { return new Vector4d(Z, Z, Z, Y); }
            set { Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZZZ
        {
            get { return new Vector4d(Z, Z, Z, Z); }
            set { Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZZW
        {
            get { return new Vector4d(Z, Z, Z, W); }
            set { Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZWX
        {
            get { return new Vector4d(Z, Z, W, X); }
            set { X = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZWY
        {
            get { return new Vector4d(Z, Z, W, Y); }
            set { Y = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZWZ
        {
            get { return new Vector4d(Z, Z, W, Z); }
            set { Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZZWW
        {
            get { return new Vector4d(Z, Z, W, W); }
            set { Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWXX
        {
            get { return new Vector4d(Z, W, X, X); }
            set { X = value.W; Z = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWXY
        {
            get { return new Vector4d(Z, W, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWXZ
        {
            get { return new Vector4d(Z, W, X, Z); }
            set { X = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWXW
        {
            get { return new Vector4d(Z, W, X, W); }
            set { X = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWYX
        {
            get { return new Vector4d(Z, W, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWYY
        {
            get { return new Vector4d(Z, W, Y, Y); }
            set { Y = value.W; Z = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWYZ
        {
            get { return new Vector4d(Z, W, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWYW
        {
            get { return new Vector4d(Z, W, Y, W); }
            set { Y = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWZX
        {
            get { return new Vector4d(Z, W, Z, X); }
            set { X = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWZY
        {
            get { return new Vector4d(Z, W, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWZZ
        {
            get { return new Vector4d(Z, W, Z, Z); }
            set { Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWZW
        {
            get { return new Vector4d(Z, W, Z, W); }
            set { Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWWX
        {
            get { return new Vector4d(Z, W, W, X); }
            set { X = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWWY
        {
            get { return new Vector4d(Z, W, W, Y); }
            set { Y = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWWZ
        {
            get { return new Vector4d(Z, W, W, Z); }
            set { Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d ZWWW
        {
            get { return new Vector4d(Z, W, W, W); }
            set { Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXXX
        {
            get { return new Vector4d(W, X, X, X); }
            set { X = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXXY
        {
            get { return new Vector4d(W, X, X, Y); }
            set { X = value.Z; Y = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXXZ
        {
            get { return new Vector4d(W, X, X, Z); }
            set { X = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXXW
        {
            get { return new Vector4d(W, X, X, W); }
            set { X = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXYX
        {
            get { return new Vector4d(W, X, Y, X); }
            set { X = value.W; Y = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXYY
        {
            get { return new Vector4d(W, X, Y, Y); }
            set { X = value.Y; Y = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXYZ
        {
            get { return new Vector4d(W, X, Y, Z); }
            set { X = value.Y; Y = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXYW
        {
            get { return new Vector4d(W, X, Y, W); }
            set { X = value.Y; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXZX
        {
            get { return new Vector4d(W, X, Z, X); }
            set { X = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXZY
        {
            get { return new Vector4d(W, X, Z, Y); }
            set { X = value.Y; Y = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXZZ
        {
            get { return new Vector4d(W, X, Z, Z); }
            set { X = value.Y; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXZW
        {
            get { return new Vector4d(W, X, Z, W); }
            set { X = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXWX
        {
            get { return new Vector4d(W, X, W, X); }
            set { X = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXWY
        {
            get { return new Vector4d(W, X, W, Y); }
            set { X = value.Y; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXWZ
        {
            get { return new Vector4d(W, X, W, Z); }
            set { X = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WXWW
        {
            get { return new Vector4d(W, X, W, W); }
            set { X = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYXX
        {
            get { return new Vector4d(W, Y, X, X); }
            set { X = value.W; Y = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYXY
        {
            get { return new Vector4d(W, Y, X, Y); }
            set { X = value.Z; Y = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYXZ
        {
            get { return new Vector4d(W, Y, X, Z); }
            set { X = value.Z; Y = value.Y; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYXW
        {
            get { return new Vector4d(W, Y, X, W); }
            set { X = value.Z; Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYYX
        {
            get { return new Vector4d(W, Y, Y, X); }
            set { X = value.W; Y = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYYY
        {
            get { return new Vector4d(W, Y, Y, Y); }
            set { Y = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYYZ
        {
            get { return new Vector4d(W, Y, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYYW
        {
            get { return new Vector4d(W, Y, Y, W); }
            set { Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYZX
        {
            get { return new Vector4d(W, Y, Z, X); }
            set { X = value.W; Y = value.Y; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYZY
        {
            get { return new Vector4d(W, Y, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYZZ
        {
            get { return new Vector4d(W, Y, Z, Z); }
            set { Y = value.Y; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYZW
        {
            get { return new Vector4d(W, Y, Z, W); }
            set { Y = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYWX
        {
            get { return new Vector4d(W, Y, W, X); }
            set { X = value.W; Y = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYWY
        {
            get { return new Vector4d(W, Y, W, Y); }
            set { Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYWZ
        {
            get { return new Vector4d(W, Y, W, Z); }
            set { Y = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WYWW
        {
            get { return new Vector4d(W, Y, W, W); }
            set { Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZXX
        {
            get { return new Vector4d(W, Z, X, X); }
            set { X = value.W; Z = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZXY
        {
            get { return new Vector4d(W, Z, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZXZ
        {
            get { return new Vector4d(W, Z, X, Z); }
            set { X = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZXW
        {
            get { return new Vector4d(W, Z, X, W); }
            set { X = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZYX
        {
            get { return new Vector4d(W, Z, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZYY
        {
            get { return new Vector4d(W, Z, Y, Y); }
            set { Y = value.W; Z = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZYZ
        {
            get { return new Vector4d(W, Z, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZYW
        {
            get { return new Vector4d(W, Z, Y, W); }
            set { Y = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZZX
        {
            get { return new Vector4d(W, Z, Z, X); }
            set { X = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZZY
        {
            get { return new Vector4d(W, Z, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZZZ
        {
            get { return new Vector4d(W, Z, Z, Z); }
            set { Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZZW
        {
            get { return new Vector4d(W, Z, Z, W); }
            set { Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZWX
        {
            get { return new Vector4d(W, Z, W, X); }
            set { X = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZWY
        {
            get { return new Vector4d(W, Z, W, Y); }
            set { Y = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZWZ
        {
            get { return new Vector4d(W, Z, W, Z); }
            set { Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WZWW
        {
            get { return new Vector4d(W, Z, W, W); }
            set { Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWXX
        {
            get { return new Vector4d(W, W, X, X); }
            set { X = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWXY
        {
            get { return new Vector4d(W, W, X, Y); }
            set { X = value.Z; Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWXZ
        {
            get { return new Vector4d(W, W, X, Z); }
            set { X = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWXW
        {
            get { return new Vector4d(W, W, X, W); }
            set { X = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWYX
        {
            get { return new Vector4d(W, W, Y, X); }
            set { X = value.W; Y = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWYY
        {
            get { return new Vector4d(W, W, Y, Y); }
            set { Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWYZ
        {
            get { return new Vector4d(W, W, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWYW
        {
            get { return new Vector4d(W, W, Y, W); }
            set { Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWZX
        {
            get { return new Vector4d(W, W, Z, X); }
            set { X = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWZY
        {
            get { return new Vector4d(W, W, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWZZ
        {
            get { return new Vector4d(W, W, Z, Z); }
            set { Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWZW
        {
            get { return new Vector4d(W, W, Z, W); }
            set { Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4d WWWX
        {
            get { return new Vector4d(W, W, W, X); }
            set { X = value.W; W = value.Z; }
        }

        #endregion

        #region Constructors

        /// <summary>
        /// Constructor with arguments.
        /// </summary>
        /// <param name="x">The x component.</param>
        /// <param name="y">The y component.</param>
        /// <param name="z">The z component.</param>
        /// <param name="w">The w component.</param>
        public Vector4d(double x, double y, double z, double w)
        {
            this.X = x;
            this.Y = y;
            this.Z = z;
            this.W = w;
        }

        /// <summary>
        /// Copy constructor.
        /// </summary>
        /// <param name="r">The vector to copy.</param>
        public Vector4d(Vector4d r)
        {
            X = r.X;
            Y = r.Y;
            Z = r.Z;
            W = r.W;
        }

        //#ifdef Sqrt


        /// <summary>
        /// Construction with magnitude and direction.
        /// </summary>
        /// <param name="magnitude">The magnitude, or length of vector.</param>
        /// <param name="direction">Direction of vector.</param>
        public Vector4d(double magnitude, Vector4d direction)
        {
            this = magnitude * direction.Normal;
        }

        //#endif

        #endregion

        #region IComparable Members

        public int CompareTo(object obj)
        {
            if (obj.GetType() == this.GetType()) return CompareTo((Vector4d)obj);
            throw new Exception("Cannot compare incompatible types.");
        }

        #endregion

        #region IComparable<Vector4d> Members

        public int CompareTo(Vector4d other)
        {
            int cmp = X.CompareTo(other.X);
            if (cmp != 0) return cmp;
            cmp = Y.CompareTo(other.Y);
            if (cmp != 0) return cmp;
            cmp = Z.CompareTo(other.Z);
            if (cmp != 0) return cmp;
            return W.CompareTo(other.W);
        }

        #endregion

        #region IEquatable<Vector4d> Members

        public bool Equals(Vector4d other)
        {
            return this == other;
        }

        #endregion

        #region Conversions

        //#ifdef Vector3ClassName


        public static explicit operator Vector3d(Vector4d v)
        {
            return new Vector3d(v.X, v.Y, v.Z);
        }

        //#endif
        //#ifdef Vector2ClassName


        public static explicit operator Vector2d(Vector4d v)
        {
            return new Vector2d(v.X, v.Y);
        }

        //#endif

        #endregion
    }

}
