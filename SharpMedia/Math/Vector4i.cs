// This file was generated by TemplateEngine from template source 'Vector4'
// using template 'Vector4i. Do not modify this file directly, modify it from template source.

// This file constitutes a part of the SharpMedia project, (c) 2007 by the SharpMedia team
// and is licensed for your use under the conditions of the NDA or other legally binding contract
// that you or a legal entity you represent has signed with the SharpMedia team.
// In an event that you have received or obtained this file without such legally binding contract
// in place, you MUST destroy all files and other content to which this lincese applies and
// contact the SharpMedia team for further instructions at the internet mail address:
//
//    legal@sharpmedia.com
//
using System;
using SharpMedia.Testing;

namespace SharpMedia.Math
{
    /// <summary>
    /// A four dimensional vector of genetic type.
    /// </summary>
    [Serializable]
    public struct Vector4i : IComparable, IComparable<Vector4i>, IEquatable<Vector4i>
    {

        #region Public Members

        /// <summary>
        /// A vector processor delegate. Used at many places, like solver etc. Processor
        /// is a kind of Vector4i transformator.
        /// </summary>
        /// <param name="input">Input, as vector.</param>
        /// <returns>Vector output.</returns>
        public delegate Vector4i Processor(Vector4i input);

        /// <summary>
        /// The X component of the vector.
        /// </summary>
        public int X;

        /// <summary>
        /// The Y component of the vector.
        /// </summary>
        public int Y;

        /// <summary>
        /// The Z component of the vector.
        /// </summary>
        public int Z;

        /// <summary>
        /// The W component of the vector.
        /// </summary>
        public int W;

        #endregion

        #region Static Members

        


        /// <summary>
        /// Index access to vector.
        /// </summary>
        /// <param name="index">The index.</param>
        public int this[uint index]
        {
            get
            {
                if (index == 0) return X;
                if (index == 1) return Y;
                if (index == 2) return Z;
                if (index == 3) return W;
                throw new ArgumentException("Invalid index for 4D vector.");
            }
            set
            {
                if (index == 0) X = value;
                else if (index == 1) Y = value;
                else if (index == 2) Z = value;
                else if (index == 3) W = value;
                else throw new ArgumentException("Invalid index for 4D vector.");
            }
        }

        /// <summary>
        /// A zero vector.
        /// </summary>
        public static Vector4i Zero
        {
            get { return new Vector4i(0, 0, 0, 0); }
        }

        /// <summary>
        /// Unit vector in axis X.
        /// </summary>
        public static Vector4i AxisX
        {
            get { return new Vector4i(1, 0, 0, 0); }
        }

        /// <summary>
        /// Unit vector in axis y.
        /// </summary>
        public static Vector4i AxisY
        {
            get { return new Vector4i(0, 1, 0, 0); }
        }

        /// <summary>
        /// Unit vector in axis z.
        /// </summary>
        public static Vector4i AxisZ
        {
            get { return new Vector4i(0, 0, 1, 0); }
        }

        /// <summary>
        /// Unit vector in axis w.
        /// </summary>
        public static Vector4i AxisW
        {
            get { return new Vector4i(0, 0, 0, 1); }
        }

        
        
        

        /// <summary>
        /// Multiplication by components.
        /// </summary>
        public static Vector4i ComponentMultiply(Vector4i v1, Vector4i v2)
        {
            return new Vector4i(v1.X * v2.X, v1.Y * v2.Y, v1.Z * v2.Z, v1.W * v2.W);
        }

        /// <summary>
        /// Division by components.
        /// </summary>
        public static Vector4i ComponentDivision(Vector4i v1, Vector4i v2)
        {
            return new Vector4i(v1.X / v2.X, v1.Y / v2.Y, v1.Z / v2.Z, v1.W / v2.W);
        }

        #endregion

        #region Overrides

        /// <summary>
        /// Outputs vector in (X,Y) form.
        /// </summary>
        /// <returns>Vector converted to string.</returns>
        public override string ToString()
        {
            return "(" + X.ToString() + " ," + Y.ToString() + " ," + Z.ToString() + " ," + W.ToString() + ")";
        }

        /// <summary>
        /// Checks if objects equal.
        /// </summary>
        /// <param name="obj">The other object.</param>
        /// <returns>Do objects equal.</returns>
        public override bool Equals(object obj)
        {
            if (obj.GetType() == this.GetType()) return this == (Vector4i)obj;
            return false;
        }

        /// <summary>
        /// Obtain the hash code.
        /// </summary>
        /// <returns>The hash code.</returns>
        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        #endregion

        #region Operators

        /// <summary>
        /// Overloadable addition.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Result of addition.</returns>
        public static Vector4i operator +(Vector4i v1, Vector4i v2)
        {
            return new Vector4i(v1.X + v2.X, v1.Y + v2.Y, v1.Z + v2.Z, v1.W + v2.W);
        }

        /// <summary>
        /// Overloadable substraction.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Result of substraction.</returns>
        public static Vector4i operator -(Vector4i v1, Vector4i v2)
        {
            return new Vector4i(v1.X - v2.X, v1.Y - v2.Y, v1.Z - v2.Z, v1.W - v2.W);
        }

        /// <summary>
        /// Overloadable multiplication, or so called dot product. Result is a scalar.
        /// Dot product can be interpretered as:
        /// <code>this * other == this.Length * other.Length * this.AngleTo(other)</code>
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Result of substraction.</returns>
        public static int operator *(Vector4i v1, Vector4i v2)
        {
            return v1.X * v2.X + v1.Y * v2.Y + v1.Z * v2.Z + v1.W * v2.W;
        }

        /// <summary>
        /// Vector multiplication with scalar.
        /// </summary>
        /// <param name="v1">The vector.</param>
        /// <param name="f">Scalar.</param>
        /// <returns>Result of operation.</returns>
        public static Vector4i operator *(Vector4i v1, int f)
        {
            return new Vector4i(v1.X * f, v1.Y * f, v1.Z * f, v1.W * f);
        }

        /// <summary>
        /// Vector multiplication with scalar.
        /// </summary>
        /// <param name="v1">The vector.</param>
        /// <param name="f">Scalar.</param>
        /// <returns>Result of operation.</returns>
        public static Vector4i operator *(int f, Vector4i v1)
        {
            return new Vector4i(v1.X * f, v1.Y * f, v1.Z * f, v1.W * f);
        }

        /// <summary>
        /// Vector divided by scalar.
        /// </summary>
        /// <param name="v1">The vector.</param>
        /// <param name="f">Scalar.</param>
        /// <returns>Result of operation.</returns>
        public static Vector4i operator /(Vector4i v1, int f)
        {
            return new Vector4i(v1.X / f, v1.Y / f, v1.Z / f, v1.W / f);
        }

        /// <summary>
        /// Negation operator.
        /// </summary>
        /// <param name="v">The vector.</param>
        /// <returns>Negated vector (direction flipped).</returns>
        public static Vector4i operator -(Vector4i v)
        {
            return v * -1;
        }



        /// <summary>
        /// Checks if vectors are equal. This check is precise and may not give desirable
        /// result if small errors occur due to precission errors.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Are vectorrs equal.</returns>
        public static bool operator ==(Vector4i v1, Vector4i v2)
        {
            return (v1.X == v2.X) && (v1.Y == v2.Y) && (v1.Z == v2.Z) && (v1.W == v2.W);
        }

        /// <summary>
        /// Returns if vectors are different.
        /// </summary>
        /// <param name="v1">The first vector.</param>
        /// <param name="v2">The second vector.</param>
        /// <returns>Are vectors different.</returns>
        public static bool operator !=(Vector4i v1, Vector4i v2)
        {
            return !(v1 == v2);
        }

        #endregion

        #region Properties

        /// <summary>
        /// The obsolete x-property getter.
        /// </summary>
        [Obsolete]
        public int x
        {
            get { return X; }
            set { X = value; }
        }

        /// <summary>
        /// The obsolete y-property getter.
        /// </summary>
        [Obsolete]
        public int y
        {
            get { return Y; }
            set { Y = value; }
        }

        /// <summary>
        /// The obsolete z-property getter.
        /// </summary>
        [Obsolete]
        public int z
        {
            get { return Z; }
            set { Z = value; }
        }

        /// <summary>
        /// The obsolete w-property getter.
        /// </summary>
        [Obsolete]
        public int w
        {
            get { return W; }
            set { W = value; }
        }



        //#ifdef Vector2ClassName


        /// <summary>
        /// A two dimensional vector.
        /// </summary>
        public Vector2i Vec2
        {
            set { X = value.X; Y = value.Y; Z = 0; W = 0; }
            get { return new Vector2i(X, Y); }
        }

        //#endif

        //#ifdef Vector3ClassName


        /// <summary>
        /// A three dimensional vector.
        /// </summary>
        public Vector3i Vec3
        {
            set { X = value.X; Y = value.Y; Z = value.Z; W = 0; }
            get { return new Vector3i(X, Y, Z); }
        }

        /// <summary>
        /// Gets or sets the homohenous point 3D.
        /// </summary>
        /// <value>The point3DD.</value>
        public Vector3i Point3D
        {
            get
            {
                if (W == 0)
                {
                    // Point in infinity.
                    throw new ArithmeticException("Cannot convert a homogenous 4D point to 3D point, it is point in infinity.");
                }
                int w_inv = 1 / W;
                return new Vector3i(X * w_inv, Y * w_inv, Z * w_inv);
            }
            set
            {
                X = value.X;
                Y = value.Y;
                Z = value.Z;
                W = 1;
            }
        }

        //#endif

        /// <summary>
        /// Are all components positive.
        /// </summary>
        public bool AllPositive
        {
            get
            {
                if (X >= 0 && Y >= 0 && Z >= 0 && W >= 0) return true;
                return false;
            }
        }

        /// <summary>
        /// Are all components positive, strictly speaking.
        /// </summary>
        public bool AllPositiveStrict
        {
            get
            {
                if (X > 0 && Y > 0 && Z > 0 && W > 0) return true;
                return false;
            }
        }

        /// <summary>
        /// Are all components negative.
        /// </summary>
        public bool AllNegative
        {
            get
            {
                if (X <= 0 && Y <= 0 && Z <= 0 && W <= 0) return true;
                return false;
            }
        }

        /// <summary>
        /// Are all components negative.
        /// </summary>
        public bool AllNegativeStrict
        {
            get
            {
                if (X < 0 && Y < 0 && Z < 0 && W < 0) return true;
                return false;
            }
        }

        

        /// <summary>
        /// Length squared.
        /// </summary>
        public int Length2
        {
            get { return this * this; }
            set { this = this * value / (this * this); }
        }

        #endregion

        #region Swizzles

        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXXX
        {
            get { return new Vector4i(X, X, X, X); }
            set { X = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXXY
        {
            get { return new Vector4i(X, X, X, Y); }
            set { X = value.Z; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXXZ
        {
            get { return new Vector4i(X, X, X, Z); }
            set { X = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXXW
        {
            get { return new Vector4i(X, X, X, W); }
            set { X = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXYX
        {
            get { return new Vector4i(X, X, Y, X); }
            set { X = value.W; Y = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXYY
        {
            get { return new Vector4i(X, X, Y, Y); }
            set { X = value.Y; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXYZ
        {
            get { return new Vector4i(X, X, Y, Z); }
            set { X = value.Y; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXYW
        {
            get { return new Vector4i(X, X, Y, W); }
            set { X = value.Y; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXZX
        {
            get { return new Vector4i(X, X, Z, X); }
            set { X = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXZY
        {
            get { return new Vector4i(X, X, Z, Y); }
            set { X = value.Y; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXZZ
        {
            get { return new Vector4i(X, X, Z, Z); }
            set { X = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXZW
        {
            get { return new Vector4i(X, X, Z, W); }
            set { X = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXWX
        {
            get { return new Vector4i(X, X, W, X); }
            set { X = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXWY
        {
            get { return new Vector4i(X, X, W, Y); }
            set { X = value.Y; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXWZ
        {
            get { return new Vector4i(X, X, W, Z); }
            set { X = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XXWW
        {
            get { return new Vector4i(X, X, W, W); }
            set { X = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYXX
        {
            get { return new Vector4i(X, Y, X, X); }
            set { X = value.W; Y = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYXY
        {
            get { return new Vector4i(X, Y, X, Y); }
            set { X = value.Z; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYXZ
        {
            get { return new Vector4i(X, Y, X, Z); }
            set { X = value.Z; Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYXW
        {
            get { return new Vector4i(X, Y, X, W); }
            set { X = value.Z; Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYYX
        {
            get { return new Vector4i(X, Y, Y, X); }
            set { X = value.W; Y = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYYY
        {
            get { return new Vector4i(X, Y, Y, Y); }
            set { X = value.X; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYYZ
        {
            get { return new Vector4i(X, Y, Y, Z); }
            set { X = value.X; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYYW
        {
            get { return new Vector4i(X, Y, Y, W); }
            set { X = value.X; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYZX
        {
            get { return new Vector4i(X, Y, Z, X); }
            set { X = value.W; Y = value.Y; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYZY
        {
            get { return new Vector4i(X, Y, Z, Y); }
            set { X = value.X; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYZZ
        {
            get { return new Vector4i(X, Y, Z, Z); }
            set { X = value.X; Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYZW
        {
            get { return new Vector4i(X, Y, Z, W); }
            set { X = value.X; Y = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYWX
        {
            get { return new Vector4i(X, Y, W, X); }
            set { X = value.W; Y = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYWY
        {
            get { return new Vector4i(X, Y, W, Y); }
            set { X = value.X; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYWZ
        {
            get { return new Vector4i(X, Y, W, Z); }
            set { X = value.X; Y = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XYWW
        {
            get { return new Vector4i(X, Y, W, W); }
            set { X = value.X; Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZXX
        {
            get { return new Vector4i(X, Z, X, X); }
            set { X = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZXY
        {
            get { return new Vector4i(X, Z, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZXZ
        {
            get { return new Vector4i(X, Z, X, Z); }
            set { X = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZXW
        {
            get { return new Vector4i(X, Z, X, W); }
            set { X = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZYX
        {
            get { return new Vector4i(X, Z, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZYY
        {
            get { return new Vector4i(X, Z, Y, Y); }
            set { X = value.X; Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZYZ
        {
            get { return new Vector4i(X, Z, Y, Z); }
            set { X = value.X; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZYW
        {
            get { return new Vector4i(X, Z, Y, W); }
            set { X = value.X; Y = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZZX
        {
            get { return new Vector4i(X, Z, Z, X); }
            set { X = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZZY
        {
            get { return new Vector4i(X, Z, Z, Y); }
            set { X = value.X; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZZZ
        {
            get { return new Vector4i(X, Z, Z, Z); }
            set { X = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZZW
        {
            get { return new Vector4i(X, Z, Z, W); }
            set { X = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZWX
        {
            get { return new Vector4i(X, Z, W, X); }
            set { X = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZWY
        {
            get { return new Vector4i(X, Z, W, Y); }
            set { X = value.X; Y = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZWZ
        {
            get { return new Vector4i(X, Z, W, Z); }
            set { X = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XZWW
        {
            get { return new Vector4i(X, Z, W, W); }
            set { X = value.X; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWXX
        {
            get { return new Vector4i(X, W, X, X); }
            set { X = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWXY
        {
            get { return new Vector4i(X, W, X, Y); }
            set { X = value.Z; Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWXZ
        {
            get { return new Vector4i(X, W, X, Z); }
            set { X = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWXW
        {
            get { return new Vector4i(X, W, X, W); }
            set { X = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWYX
        {
            get { return new Vector4i(X, W, Y, X); }
            set { X = value.W; Y = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWYY
        {
            get { return new Vector4i(X, W, Y, Y); }
            set { X = value.X; Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWYZ
        {
            get { return new Vector4i(X, W, Y, Z); }
            set { X = value.X; Y = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWYW
        {
            get { return new Vector4i(X, W, Y, W); }
            set { X = value.X; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWZX
        {
            get { return new Vector4i(X, W, Z, X); }
            set { X = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWZY
        {
            get { return new Vector4i(X, W, Z, Y); }
            set { X = value.X; Y = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWZZ
        {
            get { return new Vector4i(X, W, Z, Z); }
            set { X = value.X; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWZW
        {
            get { return new Vector4i(X, W, Z, W); }
            set { X = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWWX
        {
            get { return new Vector4i(X, W, W, X); }
            set { X = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWWY
        {
            get { return new Vector4i(X, W, W, Y); }
            set { X = value.X; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWWZ
        {
            get { return new Vector4i(X, W, W, Z); }
            set { X = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i XWWW
        {
            get { return new Vector4i(X, W, W, W); }
            set { X = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXXX
        {
            get { return new Vector4i(Y, X, X, X); }
            set { X = value.W; Y = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXXY
        {
            get { return new Vector4i(Y, X, X, Y); }
            set { X = value.Z; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXXZ
        {
            get { return new Vector4i(Y, X, X, Z); }
            set { X = value.Z; Y = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXXW
        {
            get { return new Vector4i(Y, X, X, W); }
            set { X = value.Z; Y = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXYX
        {
            get { return new Vector4i(Y, X, Y, X); }
            set { X = value.W; Y = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXYY
        {
            get { return new Vector4i(Y, X, Y, Y); }
            set { X = value.Y; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXYZ
        {
            get { return new Vector4i(Y, X, Y, Z); }
            set { X = value.Y; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXYW
        {
            get { return new Vector4i(Y, X, Y, W); }
            set { X = value.Y; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXZX
        {
            get { return new Vector4i(Y, X, Z, X); }
            set { X = value.W; Y = value.X; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXZY
        {
            get { return new Vector4i(Y, X, Z, Y); }
            set { X = value.Y; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXZZ
        {
            get { return new Vector4i(Y, X, Z, Z); }
            set { X = value.Y; Y = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXZW
        {
            get { return new Vector4i(Y, X, Z, W); }
            set { X = value.Y; Y = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXWX
        {
            get { return new Vector4i(Y, X, W, X); }
            set { X = value.W; Y = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXWY
        {
            get { return new Vector4i(Y, X, W, Y); }
            set { X = value.Y; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXWZ
        {
            get { return new Vector4i(Y, X, W, Z); }
            set { X = value.Y; Y = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YXWW
        {
            get { return new Vector4i(Y, X, W, W); }
            set { X = value.Y; Y = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYXX
        {
            get { return new Vector4i(Y, Y, X, X); }
            set { X = value.W; Y = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYXY
        {
            get { return new Vector4i(Y, Y, X, Y); }
            set { X = value.Z; Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYXZ
        {
            get { return new Vector4i(Y, Y, X, Z); }
            set { X = value.Z; Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYXW
        {
            get { return new Vector4i(Y, Y, X, W); }
            set { X = value.Z; Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYYX
        {
            get { return new Vector4i(Y, Y, Y, X); }
            set { X = value.W; Y = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYYY
        {
            get { return new Vector4i(Y, Y, Y, Y); }
            set { Y = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYYZ
        {
            get { return new Vector4i(Y, Y, Y, Z); }
            set { Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYYW
        {
            get { return new Vector4i(Y, Y, Y, W); }
            set { Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYZX
        {
            get { return new Vector4i(Y, Y, Z, X); }
            set { X = value.W; Y = value.Y; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYZY
        {
            get { return new Vector4i(Y, Y, Z, Y); }
            set { Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYZZ
        {
            get { return new Vector4i(Y, Y, Z, Z); }
            set { Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYZW
        {
            get { return new Vector4i(Y, Y, Z, W); }
            set { Y = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYWX
        {
            get { return new Vector4i(Y, Y, W, X); }
            set { X = value.W; Y = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYWY
        {
            get { return new Vector4i(Y, Y, W, Y); }
            set { Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYWZ
        {
            get { return new Vector4i(Y, Y, W, Z); }
            set { Y = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YYWW
        {
            get { return new Vector4i(Y, Y, W, W); }
            set { Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZXX
        {
            get { return new Vector4i(Y, Z, X, X); }
            set { X = value.W; Y = value.X; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZXY
        {
            get { return new Vector4i(Y, Z, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZXZ
        {
            get { return new Vector4i(Y, Z, X, Z); }
            set { X = value.Z; Y = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZXW
        {
            get { return new Vector4i(Y, Z, X, W); }
            set { X = value.Z; Y = value.X; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZYX
        {
            get { return new Vector4i(Y, Z, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZYY
        {
            get { return new Vector4i(Y, Z, Y, Y); }
            set { Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZYZ
        {
            get { return new Vector4i(Y, Z, Y, Z); }
            set { Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZYW
        {
            get { return new Vector4i(Y, Z, Y, W); }
            set { Y = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZZX
        {
            get { return new Vector4i(Y, Z, Z, X); }
            set { X = value.W; Y = value.X; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZZY
        {
            get { return new Vector4i(Y, Z, Z, Y); }
            set { Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZZZ
        {
            get { return new Vector4i(Y, Z, Z, Z); }
            set { Y = value.X; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZZW
        {
            get { return new Vector4i(Y, Z, Z, W); }
            set { Y = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZWX
        {
            get { return new Vector4i(Y, Z, W, X); }
            set { X = value.W; Y = value.X; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZWY
        {
            get { return new Vector4i(Y, Z, W, Y); }
            set { Y = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZWZ
        {
            get { return new Vector4i(Y, Z, W, Z); }
            set { Y = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YZWW
        {
            get { return new Vector4i(Y, Z, W, W); }
            set { Y = value.X; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWXX
        {
            get { return new Vector4i(Y, W, X, X); }
            set { X = value.W; Y = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWXY
        {
            get { return new Vector4i(Y, W, X, Y); }
            set { X = value.Z; Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWXZ
        {
            get { return new Vector4i(Y, W, X, Z); }
            set { X = value.Z; Y = value.X; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWXW
        {
            get { return new Vector4i(Y, W, X, W); }
            set { X = value.Z; Y = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWYX
        {
            get { return new Vector4i(Y, W, Y, X); }
            set { X = value.W; Y = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWYY
        {
            get { return new Vector4i(Y, W, Y, Y); }
            set { Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWYZ
        {
            get { return new Vector4i(Y, W, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWYW
        {
            get { return new Vector4i(Y, W, Y, W); }
            set { Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWZX
        {
            get { return new Vector4i(Y, W, Z, X); }
            set { X = value.W; Y = value.X; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWZY
        {
            get { return new Vector4i(Y, W, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWZZ
        {
            get { return new Vector4i(Y, W, Z, Z); }
            set { Y = value.X; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWZW
        {
            get { return new Vector4i(Y, W, Z, W); }
            set { Y = value.X; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWWX
        {
            get { return new Vector4i(Y, W, W, X); }
            set { X = value.W; Y = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWWY
        {
            get { return new Vector4i(Y, W, W, Y); }
            set { Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWWZ
        {
            get { return new Vector4i(Y, W, W, Z); }
            set { Y = value.X; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i YWWW
        {
            get { return new Vector4i(Y, W, W, W); }
            set { Y = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXXX
        {
            get { return new Vector4i(Z, X, X, X); }
            set { X = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXXY
        {
            get { return new Vector4i(Z, X, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXXZ
        {
            get { return new Vector4i(Z, X, X, Z); }
            set { X = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXXW
        {
            get { return new Vector4i(Z, X, X, W); }
            set { X = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXYX
        {
            get { return new Vector4i(Z, X, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXYY
        {
            get { return new Vector4i(Z, X, Y, Y); }
            set { X = value.Y; Y = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXYZ
        {
            get { return new Vector4i(Z, X, Y, Z); }
            set { X = value.Y; Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXYW
        {
            get { return new Vector4i(Z, X, Y, W); }
            set { X = value.Y; Y = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXZX
        {
            get { return new Vector4i(Z, X, Z, X); }
            set { X = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXZY
        {
            get { return new Vector4i(Z, X, Z, Y); }
            set { X = value.Y; Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXZZ
        {
            get { return new Vector4i(Z, X, Z, Z); }
            set { X = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXZW
        {
            get { return new Vector4i(Z, X, Z, W); }
            set { X = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXWX
        {
            get { return new Vector4i(Z, X, W, X); }
            set { X = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXWY
        {
            get { return new Vector4i(Z, X, W, Y); }
            set { X = value.Y; Y = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXWZ
        {
            get { return new Vector4i(Z, X, W, Z); }
            set { X = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZXWW
        {
            get { return new Vector4i(Z, X, W, W); }
            set { X = value.Y; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYXX
        {
            get { return new Vector4i(Z, Y, X, X); }
            set { X = value.W; Y = value.Y; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYXY
        {
            get { return new Vector4i(Z, Y, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYXZ
        {
            get { return new Vector4i(Z, Y, X, Z); }
            set { X = value.Z; Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYXW
        {
            get { return new Vector4i(Z, Y, X, W); }
            set { X = value.Z; Y = value.Y; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYYX
        {
            get { return new Vector4i(Z, Y, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYYY
        {
            get { return new Vector4i(Z, Y, Y, Y); }
            set { Y = value.W; Z = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYYZ
        {
            get { return new Vector4i(Z, Y, Y, Z); }
            set { Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYYW
        {
            get { return new Vector4i(Z, Y, Y, W); }
            set { Y = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYZX
        {
            get { return new Vector4i(Z, Y, Z, X); }
            set { X = value.W; Y = value.Y; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYZY
        {
            get { return new Vector4i(Z, Y, Z, Y); }
            set { Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYZZ
        {
            get { return new Vector4i(Z, Y, Z, Z); }
            set { Y = value.Y; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYZW
        {
            get { return new Vector4i(Z, Y, Z, W); }
            set { Y = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYWX
        {
            get { return new Vector4i(Z, Y, W, X); }
            set { X = value.W; Y = value.Y; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYWY
        {
            get { return new Vector4i(Z, Y, W, Y); }
            set { Y = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYWZ
        {
            get { return new Vector4i(Z, Y, W, Z); }
            set { Y = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZYWW
        {
            get { return new Vector4i(Z, Y, W, W); }
            set { Y = value.Y; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZXX
        {
            get { return new Vector4i(Z, Z, X, X); }
            set { X = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZXY
        {
            get { return new Vector4i(Z, Z, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZXZ
        {
            get { return new Vector4i(Z, Z, X, Z); }
            set { X = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZXW
        {
            get { return new Vector4i(Z, Z, X, W); }
            set { X = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZYX
        {
            get { return new Vector4i(Z, Z, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZYY
        {
            get { return new Vector4i(Z, Z, Y, Y); }
            set { Y = value.W; Z = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZYZ
        {
            get { return new Vector4i(Z, Z, Y, Z); }
            set { Y = value.Z; Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZYW
        {
            get { return new Vector4i(Z, Z, Y, W); }
            set { Y = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZZX
        {
            get { return new Vector4i(Z, Z, Z, X); }
            set { X = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZZY
        {
            get { return new Vector4i(Z, Z, Z, Y); }
            set { Y = value.W; Z = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZZZ
        {
            get { return new Vector4i(Z, Z, Z, Z); }
            set { Z = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZZW
        {
            get { return new Vector4i(Z, Z, Z, W); }
            set { Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZWX
        {
            get { return new Vector4i(Z, Z, W, X); }
            set { X = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZWY
        {
            get { return new Vector4i(Z, Z, W, Y); }
            set { Y = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZWZ
        {
            get { return new Vector4i(Z, Z, W, Z); }
            set { Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZZWW
        {
            get { return new Vector4i(Z, Z, W, W); }
            set { Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWXX
        {
            get { return new Vector4i(Z, W, X, X); }
            set { X = value.W; Z = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWXY
        {
            get { return new Vector4i(Z, W, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWXZ
        {
            get { return new Vector4i(Z, W, X, Z); }
            set { X = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWXW
        {
            get { return new Vector4i(Z, W, X, W); }
            set { X = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWYX
        {
            get { return new Vector4i(Z, W, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWYY
        {
            get { return new Vector4i(Z, W, Y, Y); }
            set { Y = value.W; Z = value.X; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWYZ
        {
            get { return new Vector4i(Z, W, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWYW
        {
            get { return new Vector4i(Z, W, Y, W); }
            set { Y = value.Z; Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWZX
        {
            get { return new Vector4i(Z, W, Z, X); }
            set { X = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWZY
        {
            get { return new Vector4i(Z, W, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWZZ
        {
            get { return new Vector4i(Z, W, Z, Z); }
            set { Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWZW
        {
            get { return new Vector4i(Z, W, Z, W); }
            set { Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWWX
        {
            get { return new Vector4i(Z, W, W, X); }
            set { X = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWWY
        {
            get { return new Vector4i(Z, W, W, Y); }
            set { Y = value.W; Z = value.X; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWWZ
        {
            get { return new Vector4i(Z, W, W, Z); }
            set { Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i ZWWW
        {
            get { return new Vector4i(Z, W, W, W); }
            set { Z = value.X; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXXX
        {
            get { return new Vector4i(W, X, X, X); }
            set { X = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXXY
        {
            get { return new Vector4i(W, X, X, Y); }
            set { X = value.Z; Y = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXXZ
        {
            get { return new Vector4i(W, X, X, Z); }
            set { X = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXXW
        {
            get { return new Vector4i(W, X, X, W); }
            set { X = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXYX
        {
            get { return new Vector4i(W, X, Y, X); }
            set { X = value.W; Y = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXYY
        {
            get { return new Vector4i(W, X, Y, Y); }
            set { X = value.Y; Y = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXYZ
        {
            get { return new Vector4i(W, X, Y, Z); }
            set { X = value.Y; Y = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXYW
        {
            get { return new Vector4i(W, X, Y, W); }
            set { X = value.Y; Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXZX
        {
            get { return new Vector4i(W, X, Z, X); }
            set { X = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXZY
        {
            get { return new Vector4i(W, X, Z, Y); }
            set { X = value.Y; Y = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXZZ
        {
            get { return new Vector4i(W, X, Z, Z); }
            set { X = value.Y; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXZW
        {
            get { return new Vector4i(W, X, Z, W); }
            set { X = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXWX
        {
            get { return new Vector4i(W, X, W, X); }
            set { X = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXWY
        {
            get { return new Vector4i(W, X, W, Y); }
            set { X = value.Y; Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXWZ
        {
            get { return new Vector4i(W, X, W, Z); }
            set { X = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WXWW
        {
            get { return new Vector4i(W, X, W, W); }
            set { X = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYXX
        {
            get { return new Vector4i(W, Y, X, X); }
            set { X = value.W; Y = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYXY
        {
            get { return new Vector4i(W, Y, X, Y); }
            set { X = value.Z; Y = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYXZ
        {
            get { return new Vector4i(W, Y, X, Z); }
            set { X = value.Z; Y = value.Y; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYXW
        {
            get { return new Vector4i(W, Y, X, W); }
            set { X = value.Z; Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYYX
        {
            get { return new Vector4i(W, Y, Y, X); }
            set { X = value.W; Y = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYYY
        {
            get { return new Vector4i(W, Y, Y, Y); }
            set { Y = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYYZ
        {
            get { return new Vector4i(W, Y, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYYW
        {
            get { return new Vector4i(W, Y, Y, W); }
            set { Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYZX
        {
            get { return new Vector4i(W, Y, Z, X); }
            set { X = value.W; Y = value.Y; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYZY
        {
            get { return new Vector4i(W, Y, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYZZ
        {
            get { return new Vector4i(W, Y, Z, Z); }
            set { Y = value.Y; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYZW
        {
            get { return new Vector4i(W, Y, Z, W); }
            set { Y = value.Y; Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYWX
        {
            get { return new Vector4i(W, Y, W, X); }
            set { X = value.W; Y = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYWY
        {
            get { return new Vector4i(W, Y, W, Y); }
            set { Y = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYWZ
        {
            get { return new Vector4i(W, Y, W, Z); }
            set { Y = value.Y; Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WYWW
        {
            get { return new Vector4i(W, Y, W, W); }
            set { Y = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZXX
        {
            get { return new Vector4i(W, Z, X, X); }
            set { X = value.W; Z = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZXY
        {
            get { return new Vector4i(W, Z, X, Y); }
            set { X = value.Z; Y = value.W; Z = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZXZ
        {
            get { return new Vector4i(W, Z, X, Z); }
            set { X = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZXW
        {
            get { return new Vector4i(W, Z, X, W); }
            set { X = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZYX
        {
            get { return new Vector4i(W, Z, Y, X); }
            set { X = value.W; Y = value.Z; Z = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZYY
        {
            get { return new Vector4i(W, Z, Y, Y); }
            set { Y = value.W; Z = value.Y; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZYZ
        {
            get { return new Vector4i(W, Z, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZYW
        {
            get { return new Vector4i(W, Z, Y, W); }
            set { Y = value.Z; Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZZX
        {
            get { return new Vector4i(W, Z, Z, X); }
            set { X = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZZY
        {
            get { return new Vector4i(W, Z, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZZZ
        {
            get { return new Vector4i(W, Z, Z, Z); }
            set { Z = value.W; W = value.X; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZZW
        {
            get { return new Vector4i(W, Z, Z, W); }
            set { Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZWX
        {
            get { return new Vector4i(W, Z, W, X); }
            set { X = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZWY
        {
            get { return new Vector4i(W, Z, W, Y); }
            set { Y = value.W; Z = value.Y; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZWZ
        {
            get { return new Vector4i(W, Z, W, Z); }
            set { Z = value.W; W = value.Z; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WZWW
        {
            get { return new Vector4i(W, Z, W, W); }
            set { Z = value.Y; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWXX
        {
            get { return new Vector4i(W, W, X, X); }
            set { X = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWXY
        {
            get { return new Vector4i(W, W, X, Y); }
            set { X = value.Z; Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWXZ
        {
            get { return new Vector4i(W, W, X, Z); }
            set { X = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWXW
        {
            get { return new Vector4i(W, W, X, W); }
            set { X = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWYX
        {
            get { return new Vector4i(W, W, Y, X); }
            set { X = value.W; Y = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWYY
        {
            get { return new Vector4i(W, W, Y, Y); }
            set { Y = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWYZ
        {
            get { return new Vector4i(W, W, Y, Z); }
            set { Y = value.Z; Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWYW
        {
            get { return new Vector4i(W, W, Y, W); }
            set { Y = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWZX
        {
            get { return new Vector4i(W, W, Z, X); }
            set { X = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWZY
        {
            get { return new Vector4i(W, W, Z, Y); }
            set { Y = value.W; Z = value.Z; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWZZ
        {
            get { return new Vector4i(W, W, Z, Z); }
            set { Z = value.W; W = value.Y; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWZW
        {
            get { return new Vector4i(W, W, Z, W); }
            set { Z = value.Z; W = value.W; }
        }
        /// <summary>
        /// The swizzle mask.
        /// </summary>
        public Vector4i WWWX
        {
            get { return new Vector4i(W, W, W, X); }
            set { X = value.W; W = value.Z; }
        }

        #endregion

        #region Constructors

        /// <summary>
        /// Constructor with arguments.
        /// </summary>
        /// <param name="x">The x component.</param>
        /// <param name="y">The y component.</param>
        /// <param name="z">The z component.</param>
        /// <param name="w">The w component.</param>
        public Vector4i(int x, int y, int z, int w)
        {
            this.X = x;
            this.Y = y;
            this.Z = z;
            this.W = w;
        }

        /// <summary>
        /// Copy constructor.
        /// </summary>
        /// <param name="r">The vector to copy.</param>
        public Vector4i(Vector4i r)
        {
            X = r.X;
            Y = r.Y;
            Z = r.Z;
            W = r.W;
        }

        

        #endregion

        #region IComparable Members

        public int CompareTo(object obj)
        {
            if (obj.GetType() == this.GetType()) return CompareTo((Vector4i)obj);
            throw new Exception("Cannot compare incompatible types.");
        }

        #endregion

        #region IComparable<Vector4i> Members

        public int CompareTo(Vector4i other)
        {
            int cmp = X.CompareTo(other.X);
            if (cmp != 0) return cmp;
            cmp = Y.CompareTo(other.Y);
            if (cmp != 0) return cmp;
            cmp = Z.CompareTo(other.Z);
            if (cmp != 0) return cmp;
            return W.CompareTo(other.W);
        }

        #endregion

        #region IEquatable<Vector4i> Members

        public bool Equals(Vector4i other)
        {
            return this == other;
        }

        #endregion

        #region Conversions

        //#ifdef Vector3ClassName


        public static explicit operator Vector3i(Vector4i v)
        {
            return new Vector3i(v.X, v.Y, v.Z);
        }

        //#endif
        //#ifdef Vector2ClassName


        public static explicit operator Vector2i(Vector4i v)
        {
            return new Vector2i(v.X, v.Y);
        }

        //#endif

        #endregion
    }

}
