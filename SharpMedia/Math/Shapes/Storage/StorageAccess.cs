// This file was generated by TemplateEngine from template source 'StorageAccess'
// using template 'StorageAccess. Do not modify this file directly, modify it from template source.

using System;
using System.Collections.Generic;
using System.Text;
using System.Threading;

namespace SharpMedia.Math.Shapes.Storage
{

    
		//#foreach instanced to 'Vector2d'


    /// <summary>
    /// A line access interface.
    /// </summary>
    public interface ILineAccess2d
    {
        /// <summary>
        /// Number of lines.
        /// </summary>
        uint ShapeCount { get; } 

        /// <summary>
        /// Gets lines.
        /// </summary>
        /// <param name="index">The line index.</param>
        /// <param name="segment">The data to be filled.</param>
        void Get(uint index, LineSegment2d[] segment);
    }


    /// <summary>
    /// A triangle access interface.
    /// </summary>
    public interface ITriangleAccess2d
    {
        /// <summary>
        /// Number of triangles.
        /// </summary>
        uint ShapeCount { get; }

        /// <summary>
        /// Gets lines.
        /// </summary>
        /// <param name="index">The line index.</param>
        /// <param name="segment">The data to be filled.</param>
        void Get(uint index, Triangle2d[] segment);
    }

    //#endfor instanced to 'Vector2d'

		//#foreach instanced to 'Vector2f'


    /// <summary>
    /// A line access interface.
    /// </summary>
    public interface ILineAccess2f
    {
        /// <summary>
        /// Number of lines.
        /// </summary>
        uint ShapeCount { get; } 

        /// <summary>
        /// Gets lines.
        /// </summary>
        /// <param name="index">The line index.</param>
        /// <param name="segment">The data to be filled.</param>
        void Get(uint index, LineSegment2f[] segment);
    }


    /// <summary>
    /// A triangle access interface.
    /// </summary>
    public interface ITriangleAccess2f
    {
        /// <summary>
        /// Number of triangles.
        /// </summary>
        uint ShapeCount { get; }

        /// <summary>
        /// Gets lines.
        /// </summary>
        /// <param name="index">The line index.</param>
        /// <param name="segment">The data to be filled.</param>
        void Get(uint index, Triangle2f[] segment);
    }

    //#endfor instanced to 'Vector2f'

		//#foreach instanced to 'Vector3d'


    /// <summary>
    /// A line access interface.
    /// </summary>
    public interface ILineAccess3d
    {
        /// <summary>
        /// Number of lines.
        /// </summary>
        uint ShapeCount { get; } 

        /// <summary>
        /// Gets lines.
        /// </summary>
        /// <param name="index">The line index.</param>
        /// <param name="segment">The data to be filled.</param>
        void Get(uint index, LineSegment3d[] segment);
    }


    /// <summary>
    /// A triangle access interface.
    /// </summary>
    public interface ITriangleAccess3d
    {
        /// <summary>
        /// Number of triangles.
        /// </summary>
        uint ShapeCount { get; }

        /// <summary>
        /// Gets lines.
        /// </summary>
        /// <param name="index">The line index.</param>
        /// <param name="segment">The data to be filled.</param>
        void Get(uint index, Triangle3d[] segment);
    }

    //#endfor instanced to 'Vector3d'

		//#foreach instanced to 'Vector3f'


    /// <summary>
    /// A line access interface.
    /// </summary>
    public interface ILineAccess3f
    {
        /// <summary>
        /// Number of lines.
        /// </summary>
        uint ShapeCount { get; } 

        /// <summary>
        /// Gets lines.
        /// </summary>
        /// <param name="index">The line index.</param>
        /// <param name="segment">The data to be filled.</param>
        void Get(uint index, LineSegment3f[] segment);
    }


    /// <summary>
    /// A triangle access interface.
    /// </summary>
    public interface ITriangleAccess3f
    {
        /// <summary>
        /// Number of triangles.
        /// </summary>
        uint ShapeCount { get; }

        /// <summary>
        /// Gets lines.
        /// </summary>
        /// <param name="index">The line index.</param>
        /// <param name="segment">The data to be filled.</param>
        void Get(uint index, Triangle3f[] segment);
    }

    //#endfor instanced to 'Vector3f'

}
